{"version":3,"sources":["webpack://sudoku-solver/webpack/bootstrap","webpack://sudoku-solver/./src/sudoku-core.js","webpack://sudoku-solver/./src/sudoku-solver.js"],"names":["getAdjacentValues","state","coord","y","x","xVals","yVals","map","row","squareVals","getValues","getSquareCoords","getSquare","getInitState","fillVal","Array","fill","getAdjacentCoords","xCoords","filter","yCoords","squareCoords","getAllowed","adjacent","adjacentVals","concat","includes","num","arraysAreIdentical","arr1","arr2","isArray","undefined","length","i","isSolved","isValidPuzzle","flatState","reduce","hasInvalidVals","some","val","stateCopy","copyState","checkSolutionIsValid","valsAreValid","arr","slice","sort","rows","cols","squares","square","rowsValid","every","colsValid","squaresValid","copy","printState","text","index","rowString","rowText","rowIndex","isValidValue","coordinates","getValue","coordinate","find","squareCoordMap","parseState","inputState","nextCell","curY","curX","getValidAllowed","invalidVals","solve","fixedVals","solved","completedState","nextY","nextX","allowedVals","tryVal","newState","result","newInvalid","invRow","invY"],"mappings":"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","file":"sudoku-sudoku-solver.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/sudoku-solver.js\");\n","// Returns all of the values in the same row, column, and square of a given coordinate\nexport const getAdjacentValues = (state, coord) => {\n  const [y, x] = coord;\n  const xVals = state[y];\n  const yVals = state.map(row => row[x]);\n  const squareVals = getValues(state, getSquareCoords(getSquare(y, x)));\n  return {x: xVals, y: yVals, squareVals: squareVals};\n};\n\nexport function getInitState(fillVal = null) {\n  return Array(9).fill([]).map(() => [...(Array(9).fill(fillVal))]);\n}\n\n// Returns all of the coordinates in the same row, column, and square of a given coordinate\nexport const getAdjacentCoords = (coord) => {\n  const [y, x] = coord;\n  const xCoords = [0,1,2,3,4,5,6,7,8].map(y => [y, x]).filter(coord => coord[0] !== y);\n  const yCoords = [0,1,2,3,4,5,6,7,8].map(x => [y, x]).filter(coord => coord[1] !== x);\n  const squareCoords = getSquareCoords(getSquare(y, x))\n    .filter(coord => coord[0] !== y || coord[1] !== x);\n  return {x: xCoords, y: yCoords, squareCoords: squareCoords};\n};\n\nexport const getAllowed = (state, coord) => {\n  const adjacent = getAdjacentValues(state, coord);\n  const adjacentVals = [].concat(adjacent.x, adjacent.y, adjacent.squareVals);\n  return [1,2,3,4,5,6,7,8,9].filter(num => {\n    return !adjacentVals.includes(num);\n  });\n};\n\nexport const arraysAreIdentical = (arr1, arr2) => {\n  if (!Array.isArray(arr1) || !Array.isArray(arr2)) return undefined;\n  if (arr1.length !== arr2.length) return false;\n\n  for (let i = arr1.length; i--;) {\n    if (Array.isArray(arr1[i]) || Array.isArray(arr2[i])) {\n      if (!arraysAreIdentical(arr1[i], arr2[i])) {\n        return false;\n      }\n    } else if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const isSolved = (state) => ![].concat(...state).includes(null);\n\nexport const isValidPuzzle = (state) => {\n  const flatState = state.reduce((flatState, row) => flatState.concat(row), []);\n  if (!flatState.includes(null)) return false;  // a valid puzzle must have at least one blank cell\n  if (state.length !== 9) return false;\n  const hasInvalidVals = state.some((row, y) => {  // return whether any cell values are not allowed for their coordinate\n    if (state.some((row) => row.length !== 9)) return true;\n    return row.some((val, x) => {\n      const stateCopy = copyState(state);\n      stateCopy[y][x] = null;\n      return getAllowed(stateCopy, [y, x]).includes(val)\n    }) === false;\n  });\n  return !hasInvalidVals;\n};\n\nexport const checkSolutionIsValid = (state) => {\n  const valsAreValid = (arr) => {\n    return arraysAreIdentical([1,2,3,4,5,6,7,8,9], arr.slice().sort());\n  };\n\n  const rows = state;\n  const cols = [0,1,2,3,4,5,6,7,8].map(x => state.map(row => row[x]));\n  const squares = [1,2,3,4,5,6,7,8,9].map(square => getValues(state, getSquareCoords(square)));\n\n  const rowsValid = rows.every(valsAreValid);\n  const colsValid = cols.every(valsAreValid);\n  const squaresValid = squares.every(valsAreValid);\n\n  return rowsValid && colsValid && squaresValid;\n};\n\n// const copyState = (state)  => state.map(arr => [...arr]);\nexport function copyState(state) {\n  // if (Array.isArray(state)) return state.slice().map(val => copyState(val));\n  // Switched to FOR loop for performance\n  let i, copy;\n  if (Array.isArray(state)) {\n    copy = state.slice();\n    for (i = 0; i < copy.length; i++) {\n      copy[i] = copyState(copy[i]);\n    }\n    return copy;\n  }\n  if (state !== null && typeof state === 'object') return false;  // You can't clone an object this way\n  return state;\n}\n\nexport const printState = (state) => {\n  return state.reduce((text, row, index) => {\n    if (index === 3 || index === 6) {\n      text = text.concat(\"\\n\");  // Add horizontal spacing\n    }\n    const rowString = row.reduce((rowText, val, rowIndex) => {\n      val = val === null ? '_' : val;\n      if (rowIndex === 3 || rowIndex === 6) {\n        rowText = rowText.concat(' ');  // Add vertical spacing\n      }\n      return rowText.concat(' ' + val);\n    }, '');\n    return text.concat(\"|\" + rowString + \" |\\n\");\n  }, '');\n};\n\nconst isValidValue = (val) => [1,2,3,4,5,6,7,8,9].includes(val);\n\nconst getValues = (state, coordinates) => {\n  return coordinates.map(coord => getValue(state, coord));\n};\n\n// Get the value of a given coordinate from the given puzzle state\nconst getValue = (state, coordinate) => state[coordinate[0]][coordinate[1]];\n\n// Get the square (1 through 9) that contains the given coordinates\n// TODO: Consider caching square/coordinate maps to save performance\nconst getSquare = (y, x) => {\n  return [1,2,3,4,5,6,7,8,9].find(square => {\n    return getSquareCoords(square).some(coord => {\n      return arraysAreIdentical(coord, [y, x]);\n    });\n  });\n};\n\n// Get the coordinates contained within in a given square (1 through 9)\nconst getSquareCoords = (square) => {\n  return squareCoordMap[square];\n};\n\nexport const parseState = (inputState) => {\n  return inputState.map(row => {\n    return row.map(val => isValidValue(val) ? val : null);\n  });\n};\n\n// Map of squares to the coordinates they contain\nconst squareCoordMap = {\n  1:[[0,0],[0,1],[0,2],[1,0],[1,1],[1,2],[2,0],[2,1],[2,2]],\n  2:[[0,3],[0,4],[0,5],[1,3],[1,4],[1,5],[2,3],[2,4],[2,5]],\n  3:[[0,6],[0,7],[0,8],[1,6],[1,7],[1,8],[2,6],[2,7],[2,8]],\n  4:[[3,0],[3,1],[3,2],[4,0],[4,1],[4,2],[5,0],[5,1],[5,2]],\n  5:[[3,3],[3,4],[3,5],[4,3],[4,4],[4,5],[5,3],[5,4],[5,5]],\n  6:[[3,6],[3,7],[3,8],[4,6],[4,7],[4,8],[5,6],[5,7],[5,8]],\n  7:[[6,0],[6,1],[6,2],[7,0],[7,1],[7,2],[8,0],[8,1],[8,2]],\n  8:[[6,3],[6,4],[6,5],[7,3],[7,4],[7,5],[8,3],[8,4],[8,5]],\n  9:[[6,6],[6,7],[6,8],[7,6],[7,7],[7,8],[8,6],[8,7],[8,8]],\n};\n","import {copyState, getAllowed, printState} from \"./sudoku-core\";\n\nconst nextCell = (curY, curX) => {\n  if (curX === 8 && curY === 8) return undefined;\n  if (curX === 8) return [curY + 1, 0];\n  return [curY, curX + 1];\n};\n\nconst getValidAllowed = (state, [y, x], invalidVals) => {\n  return getAllowed(state, [y, x])\n    .filter(val => !invalidVals[y][x].includes(val));\n};\n\nexport default function solve(state, [y, x], invalidVals, fixedVals) {\n  if (fixedVals[y][x] === 'fixed') {\n    if (y === 8 && x === 8) return {solved: true, completedState: state};\n    const [nextY, nextX] = nextCell(y, x);\n    return solve(state, [nextY, nextX], invalidVals, fixedVals);\n  }\n  const allowedVals = getValidAllowed(state, [y, x], invalidVals);\n  if (!allowedVals.length) return false;\n  const tryVal = allowedVals[0];  // TODO: randomize which allowedVal we use to prevent bias towards lower numbers\n  let newState = copyState(state);\n  newState[y][x] = tryVal;\n  if (y === 8 && x === 8) return {solved: true, completedState: newState};\n  const [nextY, nextX] = nextCell(y, x);\n  let result = solve(newState, [nextY, nextX], invalidVals, fixedVals);\n  if (typeof result === 'object' && result.solved === true) return result;\n  if (result === false) {\n    invalidVals[y][x] = invalidVals[y][x].concat(tryVal);  // TODO: make immutable\n    const newInvalid = copyState(invalidVals).map((invRow, invY) => {  // Remove old state\n      if (invY > y) return invRow.fill([]);\n      if (invY === y) return invRow.fill([], x + 1);\n      return invRow;\n    });\n    newState = undefined;  // TODO: Test to see if making these undefined actually reduces memory use\n    invalidVals = undefined;\n    result = undefined;\n    return solve(state, [y, x], newInvalid, fixedVals);\n  }\n}"],"sourceRoot":""}